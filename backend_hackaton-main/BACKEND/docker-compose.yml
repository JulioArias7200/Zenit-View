version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15
    container_name: bloomwatch_postgres
    environment:
      POSTGRES_DB: bloomwatch_db
      POSTGRES_USER: bloomwatch_user
      POSTGRES_PASSWORD: bloomwatch_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U bloomwatch_user -d bloomwatch_db"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Redis for background tasks
  redis:
    image: redis:7-alpine
    container_name: bloomwatch_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # BloomWatch API
  api:
    build: .
    container_name: bloomwatch_api
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=postgresql://bloomwatch_user:bloomwatch_password@postgres:5432/bloomwatch_db
      - REDIS_URL=redis://redis:6379
      - API_HOST=0.0.0.0
      - API_PORT=8000
      - DEBUG=False
    volumes:
      - ./data:/app/data
      - ./static:/app/static
      - ./temp:/app/temp
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Nginx reverse proxy
  nginx:
    image: nginx:alpine
    container_name: bloomwatch_nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./static:/usr/share/nginx/html/static
    depends_on:
      - api
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  postgres_data:
  redis_data:
